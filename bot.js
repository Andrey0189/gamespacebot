/*
*
* WARNING!
* –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–æ–¥–∞ –≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –æ—Å–Ω–æ–≤–∞–Ω–∏—è—Ö –ø–æ—Å–ª–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∞.
* –î–ª—è —Å–≤—è–∑–∏ —Å –∞–≤—Ç–æ—Ä–æ–º –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:
* Discord: zziger#8040
* Telegramm: @zziger
* VK: https://vk.com/zziger (–∞–≤—Ç–æ—Ä —Ç—É—Ç –±—ã–≤–∞–µ—Ç —Ä–µ–¥–∫–æ)
*
* –ë–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ GameSpace –≤ Discord.
* –°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä: https://discord.io/gspace
*
* –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π SpaceBot Moderator: https://github.com/zziger/gamespacemoderator
*
* Copyright 2018 ¬© GameSpace. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
* –ù–∞—Ä—É—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤ –ø—Ä–µ—Å–ª–µ–¥—É–µ—Ç—Å—è –∑–∞–∫–æ–Ω–æ–º.
*
* CC-BY-NC-SA
* http://creativecommons.org/licenses/by-nc-sa/4.0/
*
* */

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Discord.js
const Discord = require('discord.js');
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ request
const request = require("request");
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ rgbcolor
const rgbcolor = require('rgbcolor');
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ get-image-colors
const getImageColors = require('get-image-colors');
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ util
const { inspect } = require("util");
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ vm
const vm = require("vm");
// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
const codeContext =  {};
vm.createContext(codeContext);
// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Discord
const client = new Discord.Client({ autofetch: [
    'MESSAGE_CREATE',
    'MESSAGE_UPDATE',
    'MESSAGE_REACTION_ADD',
    'MESSAGE_REACTION_REMOVE',
]});
// –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–æ–ª–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∞–≤–∞
const rule = {
    own: "419562566512017415",
    trusted_own: "430006994607538201",
    ban_hammer: "417267817763831808",
    game_admin: "417312252463677451",
    moder: "426411685595578382"
};
// –ú–∞—Å—Å–∏–≤ –ª—é–¥–µ–π, –æ–±—Ö–æ–¥—è—â–∏—Ö –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
// Eclipse, —Å–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ –ø–æ–º–æ—â—å, –±–æ—Ç –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –Ω–∞ —Ö–æ—Å—Ç, —Ç–∞–∫ —á—Ç–æ –¥–∞–ª—å—à–µ —è —Å–∞–º.
const creators = ['421030089732653057'];
// –û—Å–Ω–æ–≤–Ω—ã–µ —ç–º–æ–¥–∑–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–æ—Ç—É
const emojis = {
    up:'418748638081318912',
    stop:'418748635820326912',
    shuffle:'418748638173462528',
    repeat1:'418748637531865089',
    repeat:'418748637649174535',
    play:'418748635765800961',
    pause:'418748635329855489',
    ok:'418748637502504972',
    forward:'418748554899881994',
    down:'418748613733122058',
    back:'418748554014752770',
    ABCD:'418748554518069249',
    abcd:'418748553985261568',
    abc:'418748552802598927',
    protiv:'419121914959626240',
    neznayu:'419121999277719562',
    za:'419122029854457866',
    obnimayu:'421647583551684609',
    money:'422055316792803349',
    error: '424467513578094592',
    facepalm: '429211566756462592',
    hugl: '449573567852707841'
};
// –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∏–ª–∏ –æ–ø—ã—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ –º–∏–Ω—É—Ç—ã
const talkedRecently = new Set();
// –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –æ–±—Ä–∞—â–∞–ª–∏—Å—å –∫ –±–æ—Ç—É. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–¥ –≤ 15 —Å–µ–∫—É–Ω–¥
const commandCooldown = new Set();
// –ö–∞–Ω–∞–ª—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ª–µ–≤–ª–µ
const newLevelNotificationChannels = ['417266234032390155', '418096126957453337', '421625843320750080', '421664477662937098', '417674070046277632', '421558850681044993'];
// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –æ—Ç–∫–ª—é—á–∞—è—â–∞—è —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–≤—è–∑–∞–Ω—ã —Å —Å–∞–π—Ç–æ–º
let siteOff = false;
// –ö–∞–Ω–∞–ª—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
const botFullRights = ['418096126957453337', '421558850681044993'];
// –ú–∞—Å—Å–∏–≤ —Ä–æ–ª–µ–π –∑–∞ —É—Ä–æ–≤–Ω–∏
const level_roles = [[2, '417389665042169876'], [5, '417391646863523858'], [10, '417391865038635010'], [15, '417392325405442058'], [20, '417393247162204160'], [23, '417392902872891393'], [25, '417392121541296128'], [28, '417392180747829249'], [30, '417392444750168075']];
// –û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
const channels = {'errs': '432071031356915722'};
let tasks = [];

// –±–µ–∑—Ä–∞–∑–º–µ—Ä–Ω–∞—è –ø—É—Å—Ç–æ—Ç–∞ " ‚É† "


/** @namespace process.env.PREFIX */
/** @namespace process.env.BOT_TOKEN */
/** @namespace process.env.SITE_DOMAIN */
/** @namespace process.env.SECRET_KEY */
/** @namespace process.env.WEBHOOK_ID */
/** @namespace process.env.WEBHOOK_TOKEN */
/** @namespace process.env.WEB_MEMORY */
/** @namespace process.env.MEMORY_AVAILABLE */
/** @namespace process.env.POSLANIYE */
/** @namespace process.env.DYNO */
/** @namespace process.env.PORT */


//–ü–æ–¥–±–æ—Ä —Ñ–æ—Ä–º—ã —Å–ª–æ–≤–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ
function declOfNum(number, titles) {
    let cases = [2, 0, 1, 1, 1, 2];
    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];
}

//–ü—Ä–æ–≤–µ–∫–∞, —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–ª–æ–º –∏–ª–∏ –Ω–µ—Ç
function isNumeric(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
}

//–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ –º–µ–∂–¥—É min –∏ max
function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min)) + min;
}

//–§—É–Ω–∫—Ü–∏—è, –¥–æ–±–∞–≤–ª—è—é—â–∞—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∞–∫—Ü–∏–π –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
async function multipleReact(message, arr) {
    if (arr !== []) {
        await message.react(arr.shift()).catch(console.error).then(function () {multipleReact(message,arr).catch();});
    }
}

//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–ª-–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
function clear_count (channel, count, count_all = 0) {
    if (count > 100) {
        count_all = count_all + 100;
        channel.bulkDelete(100).then(() => {clear_count(channel, count-100, count_all)});
    } else {
        channel.bulkDelete(count).then(messages => {
            count_all = count_all + messages.size;
            channel.send(`–£–¥–∞–ª–µ–Ω–æ ${count_all} ${declOfNum(count_all, ['—Å–æ–æ–±—â–µ–Ω–∏–µ','—Å–æ–æ–±—â–µ–Ω–∏—è','—Å–æ–æ–±—â–µ–Ω–∏–π'])}.`).then((msg) => {msg.delete(3000);});
        });
    }
}

//–§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—è –æ–±—å–µ–∫—Ç RichEmbed, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –æ—à–∏–±–∫—É
function embed_error(text) {
    let error_emoji = client.emojis.get(emojis.error);
    return new Discord.RichEmbed()
        .setTitle('–û—à–∏–±–∫–∞')
        .setColor('#C34E4E')
        .setFooter('GameüåÄSpace')
        .setDescription(`${error_emoji} ${text}`);
}

//–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É
function add_command(aliases, onlyInBotChat, message, command, args, access_type, access_params, command_function, pattern = null, description = null) {
    if (onlyInBotChat) {
        if (!botFullRights.includes(message.channel.id)) return;
    }
    if (typeof aliases !== 'object')
        return console.error('Error: command aliases aren\'n array');
    let embed;
    let error = false;
    if (!creators.includes(message.author.id) && !message.member.roles.has('419562566512017415'))
    if (access_type === 'rules') {
        let rights_arr = [];
        let err = false;
        access_params.forEach(function (item) {
            if (!message.member.hasPermission(item, false, true, true)) {
                err = true;
                rights_arr.push(item);
            }
        });
        if (err === true) {
            let a = '';
            let required = '–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç—Å—è';
            let rigths = rights_arr.join('`, `');
            if (access_params.length === 1) {
                a = '–∞';
                required = '–∫–æ—Ç–æ—Ä–æ–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è';
            }
            embed = embed_error(`${message.author} (\`${message.author.tag}\`), –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —É –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤${a} \`${rigths}\`, ${required} –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã\n\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–∞–∫ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <@421030089732653057>`);
            error = true;
        }
    } else if (access_type === 'roles') {
        if (!message.member.roles.some(r=>access_params.includes(r.id))) {
            let a = '–Ω–∏ –æ–¥–Ω–æ–π –∏–∑ —Ä–æ–ª–µ–π';
            let roles = '';
            let required = '–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç—Å—è';
            access_params.forEach(function (item, number, arr) {
                if (number === arr.size-2)
                roles = roles + message.guild.roles.get(item) + '–∏–ª–∏ ';
                else
                roles = roles + message.guild.roles.get(item) + ', ';
            });
            if (access_params.length === 1) {
                a = '—Ä–æ–ª–∏';
                required = '–∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç—Å—è';
            }
            embed = embed_error(`${message.author} (\`${message.author.tag}\`), –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —É –í–∞—Å –Ω–µ—Ç ${a} ${roles}${required} –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã\n\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–∞–∫ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <@421030089732653057>`);
            error = true;
        }
    } else if (access_type === 'beta') {
        if (!message.member.roles.has('448443783785349120')) {
            embed = embed_error(`${message.author} (\`${message.author.tag}\`), –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–µ—Ç–∞-—Ç–µ—Å—Ç–µ—Ä–æ–º –±–æ—Ç–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã\n\n–ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å –±–µ—Ç–∞-—Ç–µ—Å—Ç–µ—Ä–æ–º - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <@421030089732653057>`);
            error = true;
        }
    } else if (access_type === 'creat') {
        embed = embed_error(`${message.author} (\`${message.author.tag}\`), –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã\n\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–∞–∫ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <@421030089732653057>`);
        error = true;
    }
    if (!error && pattern !== 'hid') {
        let cmd = '';
        if (pattern !== null)
            cmd = cmd + `\`${aliases[0]} ${pattern}\``;
        else
            cmd = cmd + `\`${aliases[0]}\``;

        if (description !== null)
            cmd = cmd + ` ‚Äî ${description}`;
        help_commands.push(cmd);
    }
    if (!aliases.includes(command)) return;
    if (error) return message.channel.send({embed});
    if (!message.member.roles.some(r=>[rule.game_admin, rule.ban_hammer].includes(r.id)))
    if (!commandCooldown.has(message.author.id)) {
        commandCooldown.add(message.author.id);
        setTimeout(() => {
            commandCooldown.delete(message.author.id);
        }, 10000);
    } else {
        return message.channel.send('–•—ç–π-—Ö—ç–π, '+message.author+', –æ—Å—Ç—ã–Ω—å! –¢–µ–±–µ –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å, —á—Ç–æ–± –µ—â–µ —Ä–∞–∑ –æ–±—Ä–∞—Ç–∏—Ç—Å—è –∫–æ –º–Ω–µ :D');
    }
    command_function();
}

// function getSizeCoef (text) {
//     let cap = text.match(/[A-Z–ê-–Ø–Ü–á–Ñ]/g);
//     if (!cap) cap = [];
//     let sma = text.match(/[ a-z–∞-—è—ñ—ó'—î\-]/g);
//     if (!sma) sma = [];
//     let emo = text.match(/[\u{1f300}-\u{1f5ff}\u{1f900}-\u{1f9ff}\u{1f600}-\u{1f64f}\u{1f680}-\u{1f6ff}\u{2600}-\u{26ff}\u{2700}-\u{27bf}\u{1f1e6}-\u{1f1ff}\u{1f191}-\u{1f251}\u{1f004}\u{1f0cf}\u{1f170}-\u{1f171}\u{1f17e}-\u{1f17f}\u{1f18e}\u{3030}\u{2b50}\u{2b55}\u{2934}-\u{2935}\u{2b05}-\u{2b07}\u{2b1b}-\u{2b1c}\u{3297}\u{3299}\u{303d}\u{00a9}\u{00ae}\u{2122}\u{23f3}\u{24c2}\u{23e9}-\u{23ef}\u{25b6}\u{23f8}-\u{23fa}]/ug);
//     if (!emo) emo = [];
//     let tot = text.length - (cap.length + sma.length + emo.length);
//     return cap.length + sma.length * 0.5 + emo.length * 2 + tot;
// }

function newLines (text) {
    let arr = text.split(/\n|\\n+/g);
    arr.forEach((item, num) => {arr[num] = arr[num].trim()});
    return arr;
}


String.prototype.replaceAll = function(search, replacement) {
    let target = this;
    return target.replace(new RegExp(search, 'g'), replacement);
};

setInterval(function(){
    client.guilds.get('417266233562365952').members.filter(memb => memb.displayName.startsWith('!')).forEach(member => member.setNickname(member.displayName.replace(/^!+/gi, '')).catch())
}, 300000);

client.on("messageUpdate", (old_mess, new_mess) => {
    if (old_mess.channel.id === '445108574688116746' && !old_mess.author.bot) {new_mess.delete();return new_mess.author.send(`${client.emojis.get(emojis.error)} –í –∫–∞–Ω–∞–ª–µ ${new_mess.channel} –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è!`);}
});

client.on("guildMemberUpdate", (old_memb, new_memb) => {
    if (new_memb.displayName.startsWith('!')) new_memb.setNickname(new_memb.displayName.replace(/^!+/gi, '')).catch();
});

client.on("userUpdate", (old_user, new_user) => {
    if (client.guilds.get('417266233562365952').members.get(new_user.id).displayName.startsWith('!')) client.guilds.get('417266233562365952').members.get(new_user.id).setNickname(client.guilds.get('417266233562365952').members.get(new_user.id).displayName.replace(/^!+/gi, '')).catch();
});

client.on("presenceUpdate", (old_user, new_user) => {
    if (!old_user.roles.some(r=>['432401348903043073'].includes(r.id))) return;
    if (!new_user.presence.game) return;
    if (old_user.presence.game) {
        if (old_user.presence.game.streaming) return;
    }
    if (!new_user.presence.game.streaming) return;
    client.channels.get('417266234032390155').send(`üì∫ –•–µ–π, —Ä–µ–±—è—Ç! ${old_user.user} –Ω–∞—á–∞–ª —Å—Ç—Ä–∏–º! –ó–∞—Ö–æ–¥–∏–º! ${new_user.presence.game.url}`);
});

client.on('ready', () => {
	console.log('//------------------//');
    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ.');
    console.log('');
    console.log('–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
    console.log('- –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ ' + client.user.tag);
    console.log('- –ë–æ—Ç —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º ' + client.guilds.size + ' ' + declOfNum(client.guilds.size, ['—Å–µ—Ä–≤–µ—Ä–∞', '—Å–µ—Ä–≤–µ—Ä–æ–≤', '—Å–µ—Ä–≤–µ—Ä–æ–≤']));
    console.log('- –ö–æ–º–∞–Ω–¥—ã, –¥–ª—è —Ä–∞–±–æ—Ç—ã –∫–æ—Ç–æ—Ä—ã—Ö —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–∞–π—Ç ' + (siteOff ? '–≤—ã–∫–ª—é—á–µ–Ω—ã' : '–≤–∫–ª—é—á–µ–Ω—ã'));
    console.log('');
    client.fetchUser('421030089732653057').then(user => {
        console.log('–ê–≤—Ç–æ—Ä ' +  user.tag );
        console.log('–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ GameSpace. https://discord.io/gspace');
        console.log('//------------------//');
    });
});
client.on('ready', () => {
    client.user.setPresence({ game: { name: `–ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º`, type: 3 } }).catch();
    request('http://'+process.env.SITE_DOMAIN+'/get_active_tasks.php?secret='+encodeURIComponent(process.env.SECRET_KEY)+'&user='+client.user.id, function (error, response, body) {
        try {tasks = JSON.parse(body);} catch (e) {console.log('//--- tasks get failed: '+e);}
    });
});

setInterval(() => {
    request('http://'+process.env.SITE_DOMAIN+'/get_active_tasks.php?secret='+encodeURIComponent(process.env.SECRET_KEY)+'&user='+client.user.id, function (error, response, body) {
        try {tasks = JSON.parse(body);} catch (e) {console.log('//--- tasks get failed: '+e);}
    });
}, 20000);

client.on("guildMemberAdd", member => {
    const embed = new Discord.RichEmbed()
        .setTitle('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –Ω–∞ –Ω–∞—à–µ–º —É–∫—Ä–æ–º–Ω–æ–º —É–≥–æ–ª–æ—á–∫–µ!')
        .setColor("#3B024D")
        .setDescription("–ù–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–æ–±—â–∞—Ç—å—Å—è –∏–ª–∏ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∏–≥—Ä—ã. –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —É—Å–ª—É–≥–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã, –ø–æ –≤–∞—à–µ–π –ø—Ä–æ—Å—å–±–µ –º—ã —Å–¥–µ–ª–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å –æ—Ç–¥–µ–ª—å–Ω—ã–π —É–≥–æ–ª–æ–∫ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ players_rooms ( –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –æ–¥–∏–Ω –∫–∞–Ω–∞–ª ).\n" +
        "***–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ –ø–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—Å.***\n" +
        "P.S - –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º, –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ @\\üéÆGameAdmin\\üéÆ .\n" +
        `–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **${member.guild.memberCount} ${declOfNum(member.guild.memberCount, ['—á–µ–ª–æ–≤–µ–∫', '—á–µ–ª–æ–≤–µ–∫–∞', '—á–µ–ª–æ–≤–µ–∫'])}**\n\nhttps://discord.io/gspace/`)
        .setFooter("GameüåÄSpace")
        .setThumbnail(member.guild.iconURL)
        .setImage('https://cdn.discordapp.com/attachments/416813030702055425/421732235549605909/e16f6ad2e888203e52ea7b204c8d3feb.png')
        .setTimestamp();
    member.send({embed});
});

client.on("message", async message => {
    //–°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if (message.channel.id === '421260737281785856') {
        if(!message.author.bot) return;
        if(message.author.discriminator !== '0000') return;
        if(message.content.indexOf(process.env.PREFIX) !== 0) return;
        const args = message.content.slice(process.env.PREFIX.length).trim().split(/ +/g);
        const command = args.shift().toLowerCase();

        if (command === 'update_games') {
            if (!args[0]) return;
            let user = message.guild.members.get(args.shift());
            let json = args.join(' ');
            if (!user) return;
            if (json.startsWith('<br')) { return message.guild.channels.get(channels.errs).send({embed: embed_error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${message.author} (${message.author.tag}). –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:\n`+json.replace(/<br \/>/g, '\n').replace(/<b>/g, '**').replace(/<\/b>/g, '**'))});}
            let array = JSON.parse(json);
            array.forEach(function (item) {
                if (item[1] === '1') {
                    if (!user.roles.has(item[0]))
                        user.addRole(item[0]).catch(console.error);
                } else {
                    if (user.roles.has(item[0]))
                        user.removeRole(item[0]).catch(console.error);
                }
            })
        }

        if (command === 'set_color') {
            if (!args[0]) return;
            let user = message.guild.members.get(args[0]);
            if (!user) return;
            if (!args[1]) return;
            let role1 = message.guild.roles.get(args[1]);
            if (!role1) return;
            if (!role1.name.startsWith('‚ú®')) return;
            user.roles.filter(role => role.name.startsWith('‚ú®')).forEach(function (role) {
                user.removeRole(role).catch(console.error);
            });
            user.addRole(args[1]).catch(console.error);
        }
        return;
    }


    if (message.channel.id === '445108574688116746' && !message.author.bot) {
        message.channel.fetchMessages({limit: 2}).then(msgs => {
            if (msgs.last().author.id === message.author.id) {message.author.send(`${client.emojis.get(emojis.error)} –ò–≥—Ä–∞—Ç—å —Å–∞–º–æ–º—É —Å —Å–æ–±–æ–π –Ω–µ–ª—å–∑—è :D`).then((msg) => {message.delete();});return;}
            let word = msgs.last().edits.pop().content.match(/([–ê-–Ø–∞-—èa-zA-Z—ë\-]+).?(.*?)?/im)[1];
            if (!word) {message.author.send(`${client.emojis.get(emojis.error)} –ì–¥–µ —Å–ª–æ–≤–æ?? –æ_–û`).then((msg) => {message.delete();});return;}
            let charAt = 1;
            while (['—ä', '—å', '—ã', '-', '', ' '].includes(word.charAt(word.length - charAt).toLowerCase())) {
                charAt++;
            }
            if (charAt >= word.length) {message.author.send(`${client.emojis.get(emojis.error)} –ì–¥–µ —Å–ª–æ–≤–æ?? –æ_–û`).then((msg) => {message.delete();});return;}
            if (word.charAt(word.length - charAt).toLowerCase() !== message.content.match(/([–ê-–Ø–∞-—èa-zA-Z—ë\-]+).?(.*?)?/im)[1].charAt(0).toLowerCase()) {
                message.author.send(`${client.emojis.get(emojis.error)} –í–∞—à–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å \`${word.charAt(word.length - charAt).toLowerCase()}\``).then((msg) => {
                    message.delete();
                });
            }

        });
        return;
    }

    //–í—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π –≤ #votes
    if (message.channel.id === '421287649995784193') {
        return multipleReact(message, [emojis.za, emojis.neznayu, emojis.protiv]).catch();
    }

    //–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ç–∏–ø–æ–≤ –∫–∞–Ω–∞–ª–æ–≤
    if (['dm', 'group', 'category', 'voice'].includes(message.channel.type)) return;

    //–ê–≤—Ç–æ-–ø–æ–∫–∏–¥–∞–Ω–∏–µ —á—É–∂–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
    if (!['417266233562365952', '416813030232424462', '432496701614325762'].includes(message.guild.id)) {
        message.guild.leave().catch();
        return;
    }
    //–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø—ã—Ç–∞
    if (!siteOff)
    if (!talkedRecently.has(message.author.id)) {
        if (message.author.bot) return;
        request('http://'+process.env.SITE_DOMAIN+'/add.php?secret='+encodeURIComponent(process.env.SECRET_KEY)+'&user='+message.author.id, function (error, response, body) {
            if (!error && response.statusCode === 200) {
                if (body.startsWith('<br')) { return message.guild.channels.get(channels.errs).send({embed: embed_error(`–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${message.author} (${message.author.tag}). –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:\n`+body.replace(/<br \/>/g, '\n').replace(/<b>/g, '**').replace(/<\/b>/g, '**'))});}
                let lvls = JSON.parse(body);
                if (parseInt(lvls[0]) !== parseInt(lvls[1])) {
                    let msg = `–£—Ä–∞, ${message.author} –ø–æ–ª—É—á–∏–ª ${lvls[1]} —É—Ä–æ–≤–µ–Ω—å! –ü–æ–∑–¥—Ä–∞–≤—å—Ç–µ –µ–≥–æ`;
                    if (newLevelNotificationChannels.includes(message.channel.id)) {
                        message.channel.send(msg);
                    } else {
                        client.channels.get('417266234032390155').send(msg);
                    }
                    level_roles.forEach(function (item) {
                        if (lvls[1] >= item[0]) {
                            if (!message.member.roles.has(item[1])) {
                                message.member.addRole(item[1]).catch(console.error);
                                message.author.send(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å \`${message.guild.roles.get(item[1]).name}\``);
                            }
                        } else {
                            if (message.member.roles.has(item[1])) {
                                message.member.removeRole(item[1]).catch(console.error);
                            }
                        }
                    });
                }
            }
        });
        talkedRecently.add(message.author.id);
        setTimeout(() => {
            talkedRecently.delete(message.author.id);
        }, 60000);
    }

    //–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–æ–≤
	if(message.author.bot) return;

    tasks.filter(task => task[0] === message.author.id).forEach((task) => {
        if (task[2]['action']['action'] !== 'send_message') return;
        if (task[2]['action']['content_type'] === 'regex') {
            if (message.content.match(new RegExp(task[2]['action']['content'], 'i'))) {
                request('http://'+process.env.SITE_DOMAIN+'/do_task.php?secret='+encodeURIComponent(process.env.SECRET_KEY)+'&user='+task[0]+'&task='+task[1], function (error, response, body) {
                    try {
                        let arr = JSON.parse(body);
                        if (arr[0] !== arr[1]) message.reply('–≤—ã–ø–æ–ª–Ω–µ–Ω–æ: **'+arr[0]+'**/**'+arr[1]+'**').then(msg=>msg.delete(5000));
                        else if (arr[0] === arr[1]) {
                            request('http://' + process.env.SITE_DOMAIN + '/get_user_tasks.php?secret=' + encodeURIComponent(process.env.SECRET_KEY) + '&user=' + message.author.id, function (error, response, body1) {
                                try {
                                    let tasks_data = JSON.parse(body1);
                                    tasks_data[task[1]] = arr[2];
                                    let money = client.emojis.get(emojis.money);
                                    let blank = client.emojis.get('435119671143038986');
                                    let all = [];
                                    tasks_data.forEach((item, num) => {
                                        if (item !== null) {
                                            let done;
                                            if (item['active']) item['name'] = '*__' + item['name'] + '__*';
                                            if (item['active']) done = '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: **' + item['done'] + '**/**' + item['count'] + '**'; else done = blank;
                                            all[num] = ['**' + item['name'] + '**', newLines(item['task']).join('\n'), 'üèÜ –ù–∞–≥—Ä–∞–¥–∞: **' + item['reward'] + '**' + money, done];
                                        }
                                        else
                                            all[num] = [blank.toString(), '–ó–∞–¥–∞–Ω–∏—è –Ω–µ—Ç.\n–ü—Ä–∏—Ö–æ–¥–∏ –∑–∞–≤—Ç—Ä–∞!', blank, blank]
                                    });
                                    let max = 0;
                                    all.forEach((item, num) => {
                                        if (item.size > max) max = item.size;
                                    });
                                    all.forEach((item, num) => {
                                        if (max > item.size) {
                                            let diff = max - item.size;
                                            item.concat(Array.from({length: diff}, () => '\n'))
                                        }
                                    });
                                    all[task[1]][3] = '‚úÖ __***–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!***__';
                                    message.author.send({
                                        embed: (new Discord.RichEmbed()
                                                .setColor('36393E')
                                                .setTitle(':bell: –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è')
                                                .addField('–ó–∞–¥–∞–Ω–∏–µ 1', `${all[0][0]}\n${blank}\n${all[0][1]}\n\n${blank}\n${all[0][3]}\n${all[0][2]}`, true)
                                                .addField('–ó–∞–¥–∞–Ω–∏–µ 2', `${all[1][0]}\n${blank}\n${all[1][1]}\n${blank}\n${all[1][3]}\n${all[1][2]}`, true)
                                                .addField('–ó–∞–¥–∞–Ω–∏–µ 3', `${all[2][0]}\n${blank}\n${all[2][1]}\n${blank}\n${all[2][3]}\n${all[2][2]}`, true)
                                        )
                                    });
                                } catch (e) {}
                            });
                        }
                    } catch(e) {message.guild.channels.get(channels.errs).send({embed: embed_error(`–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:\n`+e)});}
                });

            }
        }
    });

    //–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø—Ä–µ—Ñ–∏–∫—Å–∞, —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç args –∏ command
    if(message.content.indexOf(process.env.PREFIX) !== 0) return;
	const args = message.content.slice(process.env.PREFIX.length).trim().split(/ +/g);
  	const command = args.shift().toLowerCase();

  	//–ú–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤ —Å–µ–±–µ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  	help_commands = [''];

  	/*----- START COMMANDS -----*/
    add_command(['—Å–∫–∞–∂–∏', 'say', 's'], false, message, command, args, 'roles', [rule.ban_hammer, rule.game_admin], function () {
        const sayMessage = args.join(" ");
        message.delete().catch(O_o=>{});
        const embed = embed_error(`${message.author}, –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç`);
        let msg = message.channel.send(sayMessage).catch(()=>{message.reply({embed});});
    }, '[—Ç–µ–∫—Å—Ç]', '–Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞');

    add_command(['–æ—á–∏—Å—Ç–∏—Ç—å', 'clear', 'del', 'clr'], false, message, command, args, 'rules', ['MANAGE_MESSAGES'], function () {
        message.delete().then(() => {
            clear_count(message.channel, parseInt(args[0]));
        });

    }, '[–∫–æ–ª-–≤–æ]', '–æ—á–∏—Å—Ç–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π');

    add_command(['–∞–≤–∞—Ç–∞—Ä–∫–∞', 'avatar', 'av', '–∞–≤'], false, message, command, args, 'e', null, function() {
        let member = message.mentions.members.first();
        const error = embed_error(`${message.author}, —á–µ–ª–æ–≤–µ–∫, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –ø—ã—Ç–∞–ª–∏—Å—Ç—å –≤–∑—è—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞`);
        if (!member)
            return message.channel.send({embed: error});
        let colors = getImageColors(message.mentions.users.first().avatarURL).then(color => {
            let c = color.map(col => col.hex());
            const embed = new Discord.RichEmbed()
                .setTitle(`–ê–≤–∞—Ç–∞—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${member.user.tag}`)
                .setImage(member.user.avatarURL)
                .setFooter("GameüåÄSpace")
                .setColor(c[0])
                .setDescription('–ê–≤–∞—Ç–∞—Ä–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É '+ message.author + ' (`'+message.author.tag+'`)');
            message.channel.send({embed});
            message.delete();
        });
    }, '[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]', '–æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

    add_command(['–∏–≥—Ä—ã', 'games'], false, message, command, args, 'e', null, function () {
        const embed = new Discord.RichEmbed()
            .setTitle('')
            .setColor(parseInt(getRandomInt(0,16777214)))
            .setDescription('**–ë–æ–∏ –ø–µ—Ç—É—Ö–æ–≤ ~~–Ω–µ –∞–¥–º–∏–Ω–æ–≤~~\n' +
                '–ß—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –±–æ—è—Ö –ø–µ—Ç—É—Ö–æ–≤, –≤—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–µ—Ç—É—Ö–∞.\n' +
                '- –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–µ—Ç—É—Ö–∞ `s!buy-item Chicken`(–¶–µ–Ω–∞- 1500 Jdüí∏)\n' +
                '–ü–æ—Å–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø–µ—Ç—É—à–∏–Ω—ã—Ö –±–æ—è—Ö.\n' +
                '- –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø–µ—Ç—É—à–∏–Ω—ã—Ö –±–æ—è—Ö `s!cock-fight {–°—Ç–∞–≤–∫–∞}`\n' +
                '\n' +
                ' –†—É–ª–µ—Ç–∫–∞:\n' +
                '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞–≤–∫—É –≤ –∏–≥—Ä–µ.\n' +
                '- –ü–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞–≤–∫—É `s!roulette \{—Å—É–º–º–∞\} \{–∏–≥—Ä–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞\}`\n' +
                '\n' +
                '–ò–≥—Ä–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏:\n' +
                '[x36]** –ù–æ–º–µ—Ä–∞ { –ª—é–±–æ–π –Ω–æ–º–µ—Ä –æ—Ç 1-36}\n' +
                '**[x 3]** –ú–Ω–æ–∂–µ—Å—Ç–≤–∞`{1-12} {13-24} {25-36}`\n' +
                '**[x 3]** –°—Ç–æ–ª–±—Ü—ã `{1st} {2nd} {3rd}`\n' +
                '**[x 2]** –ü–æ–ª–æ–≤–∏–Ω—ã `{1} {2}`\n' +
                '**[x 2]** –ù–µ—á–µ—Ç–Ω—ã–π - `{odd}` , —á–µ—Ç–Ω—ã–π - `{even}`\n' +
                '**[x 2]** –¶–≤–µ—Ç–∞ `{red} {black}`\n' +
                '\n' +
                '**x** - —É–º–Ω–æ–∂–µ–Ω–∏–µ –≤–∞—à–µ–π —Å—Ç–∞–≤–∫–∏ –ø—Ä–∏ –ø–æ–±–µ–¥–µ.\n' +
                '\n' +
                '***–ü—Ä–∏–º–µ—Ä—ã:***\n' +
                '`s!roulette 200 odd`\n' +
                '`s!roulette 600 2nd`**');
        message.reply({embed});
        message.delete();
    }, '', '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–∞—Ö');

    add_command(['—ç–∫–æ–Ω–æ–º–∏–∫–∞', 'economy'], false, message, command, args, 'e', null, function () {
        const embed = new Discord.RichEmbed()
            .setTitle('')
            .setColor(parseInt(getRandomInt(0,16777214)))
            .setDescription('***FAQ –ø–æ —ç–∫–æ–Ω–æ–º–∏–∫–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ***\n' +
                '**–î–ª—è —á–µ–≥–æ –æ–Ω–∞ –Ω—É–∂–Ω–∞?\n' +
                '–ó–∞ –≤–Ω—É—Ç—Ä–∏—Å–µ—Ä–≤–µ—Ä–Ω—É—é –≤–∞–ª—é—Ç—É –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Ü–≤–µ—Ç–Ω—ã–µ —Ä–æ–ª–∏ –∏ –ø—Ä–µ–¥–º–µ—Ç—ã.\n' +
                '\n' +
                '–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n' +
                '- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞.  `s!money`\n' +
                '- –ü–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ —É—á–∞—Å—Ç–Ω–∏–∫—É `s!give-money <@–Ω–∏–∫> <—Å—É–º–º–∞>`\n' +
                'cash** - *–∫–æ–ª-–≤–æ –Ω–∞–ª–∏—á–Ω—ã—Ö –¥–µ–Ω–µ–≥.*\n' +
                '**bank** - *—Å—á–µ—Ç –≤ –±–∞–Ω–∫–µ.*\n' +
                '(P.S- –ù–µ —Å—Ç–æ–∏—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å—á–µ—Ç—É cash, —ç—Ç–∏ –¥–µ–Ω—å–≥–∏ —É –≤–∞—Å –º–æ–≥—É—Ç —É–∫—Ä–∞—Å—Ç—å!(\n' +
                '\n' +
                '**–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞:\n' +
                '–ë–∞–Ω–∫ —Ö—Ä–∞–Ω–∏—Ç –¥–µ–Ω—å–≥–∏ –ø–æ–¥ –Ω–µ–±–æ–ª—å—à–∏–º –ø—Ä–æ—Ü–µ–Ω—Ç–æ–º ( –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤ –æ—Ç –≤—Å–µ–π —Å—É–º–º—É –Ω–∞ —Å—á–µ—Ç—É –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç—Å—è 1.5% )\n' +
                '- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–Ω–∫–µ –∏ –µ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–µ `s!bank`\n' +
                '- –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å—á–µ—Ç –≤ –±–∞–Ω–∫–µ `s!deposit <—Å—É–º–º–∞>`\n' +
                '- –ê —Ç–∞–∫ –∂–µ –æ–±–Ω–∞–ª–∏—á–∏—Ç—å —Å—á–µ—Ç `s!withdraw <—Å—É–º–º–∞>`**\n' +
                '\n' +
                '**–°–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–Ω–µ–≥**\n' +
                '**- –ü–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ (2-5 Jd üçç)**\n' +
                '*P.S- –ú–æ–∂–µ—Ç–µ –Ω–µ —Å–ø–∞–º–∏—Ç—å, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–ø–∞–º-–∑–∞—â–∏—Ç–∞. –î–µ–Ω—å–≥–∏ –Ω–µ –±—É–¥—É—Ç –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è.*\n' +
                '**- –†–∞–±–æ—Ç–∞ `s!work`\n' +
                '- –£–¥–∞—á–∞ `s!slut`**\n' +
                '*P.S- –∏–º–µ–µ—Ç —à–∞–Ω—Å 80% –Ω–∞ —É–¥–∞—á—É*\n' +
                '***–£—Å–ø–µ—à–Ω–æ- –≤—ã –ø–æ–ª—É—á–∏—Ç–µ (200-500 üçç)***\n' +
                '**–ü—Ä–æ–≤–∞–ª- —É –≤–∞—Å –∑–∞–±–µ—Ä—É—Ç –¥–æ 10% –∏–º–µ—é—â–∏—Ö—Å—è –¥–µ–Ω–µ–≥\n' +
                '- –ö—Ä–∏–º–∏–Ω–∞–ª [s!crime]**\n' +
                '*P.S- –∏–º–µ–µ—Ç —à–∞–Ω—Å 50% –Ω–∞ —É–¥–∞—á—É.*\n' +
                '***–£—Å–ø–µ—à–Ω–æ- –≤—ã –ø–æ–ª—É—á–∏—Ç–µ (400-1500 üçç)***\n' +
                '**–ü—Ä–æ–≤–∞–ª- —É –≤–∞—Å –∑–∞–±–µ—Ä—É—Ç –¥–æ 40% –∏–º–µ—é—â–∏—Ö—Å—è –¥–µ–Ω–µ–≥**\n' +
                '~~**- –ö—Ä–∞–∂–∞ –¥–µ–Ω–µ–≥ —É –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ [s!rob @–Ω–∏–∫]**~~\n' +
                '\n' +
                '**–°—É—â–µ—Å—Ç–≤—É—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏–≥—Ä—ã, –æ –Ω–∏—Ö –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É `.–∏–≥—Ä—ã` **');
        message.reply({embed});
        message.delete();
    }, '', '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–∫–æ–Ω–æ–º–∏–∫–µ');

    add_command(['remote_say', 'rs'], false, message, command, args, 'roles', [rule.ban_hammer], function () {
        if (message.channel.id = undefined) {
            const error = embed_error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.');
            return message.channel.send({error});
        }
        let new_args = args;
        const chat = new_args.shift();
        const sayMessage = new_args.join(" ");
        message.guild.channels.get(chat).send(sayMessage).catch(()=>{message.reply('—Ç—ã –µ–±–æ–±–æ?');});
        message.delete().catch(O_o=>{});
    }, 'hid');

    add_command(['—Å—Ç–∞—Ç—É—Å', 'status', 'presence', '–ø—Ä–µ—Å–µ–Ω—Å'], false, message, command, args, 'creat', null, function () {
        let new_args = args;
        if (new_args[0].toLowerCase() === '–∏–≥—Ä–∞–µ—Ç' && new_args[1].toLowerCase() === '–≤') {
            new_args[0] = '–∏–≥—Ä–∞–µ—Ç –≤';
            new_args.splice(1, 1);
        }
        let type = new_args.shift();
        let real_type;
        if (['–∏–≥—Ä–∞–µ—Ç –≤', '–∏–≥—Ä–∞–µ—Ç', 'play', 'playing', '0'].includes(type.toLowerCase()))
            real_type = 0;
        else if (['—Å–ª—É—à–∞–µ—Ç', 'hear', 'hearing', '2'].includes(type.toLowerCase()))
            real_type = 2;
        else if (['—Å–º–æ—Ç—Ä–∏—Ç', 'watch', 'watching', '3'].includes(type.toLowerCase()))
            real_type = 3;
        else return message.channel.send(`–û—à–∏–±–∫–∞. –¢–∏–ø \`${type.replace(/` /g, "\'")}\` –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        const status = new_args.join(" ");
        client.user.setPresence({ game: { name: status, type: real_type } }).catch();
        let status_word;
        if (real_type === 0)
            status_word = '–ò–≥—Ä–∞–µ—Ç –≤';
        else if (real_type === 2)
            status_word = '–°–ª—É—à–∞–µ—Ç';
        else if (real_type === 3)
            status_word = '–°–º–æ—Ç—Ä–∏—Ç';

        const embed = new Discord.RichEmbed()
            .setTitle('–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:')
            .setDescription(`${status_word} **${status.replace(/` /g, "\\\'")}**`)
            .setFooter('GameüåÄSpace');
        message.channel.send({embed});
        message.delete();
    }, '[—Ç–∏–ø] [—Ç–µ–∫—Å—Ç]', '—Å–º–µ–Ω–∏—Ç—å Presence –±–æ—Ç–∞');
	
	add_command(['—á–µ–∫–Ω—É—Ç—å_–∏–Ω–≤–∞–π—Ç—ã', 'checkinvite'], false, message, command, args, 'roles', [rule.moder, rule.ban_hammer, rule.game_admin], function () {
		
    const members = message.guild.members.filter(member => member.user.presence.game && /(discord\.(gg|io|me|li)\/.+|discordapp\.com\/invite\/.+)/i.test(member.user.presence.game.name));

		const send = new Discord.RichEmbed()
            .setTitle('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏ –≤ —Å—Ç–∞—Ç—É—Å–µ:')
            .setDescription(members.map(member => `\`${member.id}\` ${member.displayName}`).join("\n") || "–ù–∏–∫—Ç–æ –Ω–µ –∏–º–µ–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–≥—Ä—ã.")
            .setFooter('GameüåÄSpace');
		
		const okkkk = new Discord.RichEmbed()
            .setTitle('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:')
            .setDescription(`${message.author}, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`)
            .setFooter('GameüåÄSpace');
		
	message.author.send({embed: send});
		message.channel.send({embed: okkkk});
        message.delete();
    }, '', '—É–∑–Ω–∞—Ç—å, —É –∫–æ–≥–æ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤ —Å—Ç–∞—Ç—É—Å–µ');


    add_command(['–∏–¥–µ—è', 'vote', 'votes', 'idea', 'ideas', 'poll', '–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', '–≥–æ–ª–æ—Å', '–≤–æ—Ç–µ', '–≤–æ—Ç–µ—Å', '–≤–æ—Ç—ç', '–≤–æ—Ç—ç—Å', '–≥–æ–ª–æ—Å–∞'], false, message, command, args, 'e', null, function () {
        let text = args.join(' ').trim();
        if (text === '' || typeof text === 'undefined' || text === null) return getImageColors(message.author.avatarURL).then(color => {
            let c = color.map(col => col.hex());
            const embed = new Discord.RichEmbed()
                .setTitle('–ò–¥–µ–∏')
                .setDescription(`–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ—é –∏–¥–µ—é –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É!\n–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å:\n\n \`${process.env.PREFIX}${command} [—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏–¥–µ–∏]\`\n\n\n**–í–Ω–∏–º–∞–Ω–∏–µ! –ò–¥–µ–∏ –Ω–µ –ø–æ —Ç–µ–º–µ - –º—É—Ç –Ω–∞ 2 —á–∞—Å–∞!**`)
                .setColor(c[0])
                .setFooter("GameüåÄSpace");
            message.reply({embed});
            message.delete();
        });
        getImageColors(message.author.avatarURL).then(color => {
            let c = color.map(col => col.hex());
            let embed = new Discord.RichEmbed()
                .setDescription(args.join(' '))
                .addField('–ê–≤—Ç–æ—Ä', message.author + ` (\`${message.author.tag}\`)`)
                .setColor(c[0]);
            let nick = message.author.username;
            if (message.member.nickname != null) nick = message.member.nickname;
            client.fetchWebhook(process.env.WEBHOOK_ID, process.env.WEBHOOK_TOKEN).then(webhook => {
                webhook.send('', {username: nick, avatarURL: message.author.avatarURL, embeds: [embed]}).catch(console.error);
            }).catch(console.error);
            message.channel.send(`üó≥ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${message.author} —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–æ`);
            message.delete();
        });
    }, '[—Ç–µ–∫—Å—Ç]', '–¥–æ–±–∞–≤–∏—Ç—å –∏–¥–µ—é –≤ <#421287649995784193>');

    add_command(['eval', 'emulate', 'terminal', '—ç–º—É–ª–∏—Ä–æ–≤–∞—Ç—å', '—ç–≤–∞–ª', '—Ç–µ—Ä–º–∏–Ω–∞–ª', 'evaluate'], false, message, command, args, 'creat', null, function () {
	    const code = args.join(" ");
        const token = client.token.split("").join("[^]{0,2}");
        const rev = client.token.split("").reverse().join("[^]{0,2}");
        const filter = new RegExp(`${token}|${rev}`, "g");
        try {
            let output = eval(code);
            if (output instanceof Promise || (Boolean(output) && typeof output.then === "function" && typeof output.catch === "function")) output = output;
            output = inspect(output, { depth: 0, maxArrayLength: null });
            output = output.replace(filter, "[TOKEN]");
            output = clean(output);
            if (output.length < 1950) {
                //–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–∞–Ω–Ω—ã–µ —ç–º—É–ª—è—Ü–∏–∏.
                message.author.send(`\`\`\`js\n${output}\n\`\`\``);
                //–°—Ç–∞–≤–∏—Ç —Ä–µ–∞–∫—Ü–∏—é (–≤—ã–ø–æ–ª–Ω–µ–Ω–æ).
                message.react("‚úÖ")
            } else {
                message.author.send(`${output}`, {split:"\n", code:"js"});
            }
        } catch (error) {
            //–ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –∏ –≥–æ–≤–æ—Ä–∏—Ç –æ–± —ç—Ç–æ–º.
            message.channel.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ \`\`\`js\n${error}\`\`\``);
            //–°—Ç–∞–≤–∏—Ç —Ä–µ–∞–∫—Ü–∏—é (–û—à–∏–±–∫–∞).
            message.react("‚ùé")
        }

        function clean(text)  {
            return text
                .replace(/`/g, "`" + String.fromCharCode(8203))
                .replace(/@/g, "@" + String.fromCharCode(8203));
        }
    }, 'hid');

    add_command(['—Ä—É–Ω—ã', 'runic', 'runic_translate', '—Ä—É–Ω–∏—á–µ—Å–∫–∏–π', '—Ä—É–Ω–∏—á–µ—Å–∫–∏–π_–ø–µ—Ä–µ–≤–æ–¥'], true, message, command, args, 'e', null, function () {
        let text = args.join(" ");
        let new_text = '';
        for(let x = 0, sym=''; sym = text.charAt(x); x++) {
            if (sym !== undefined)
                switch (sym.toLowerCase()) {
                    case 'a':
                        new_text += '·ö®';
                        break;
                    case 'b':
                        new_text += '·õí';
                        break;
                    case 'c':
                        new_text += '·ö≤';
                        break;
                    case 'd':
                        new_text += '·õû';
                        break;
                    case 'e':
                        new_text += '·õñ';
                        break;
                    case 'f':
                        new_text += '·ö†';
                        break;
                    case 'g':
                        new_text += '·ö∑';
                        break;
                    case 'h':
                        new_text += '·ö∫';
                        break;
                    case 'i':
                        new_text += '·õÅ';
                        break;
                    case 'j':
                        new_text += '·õÉ';
                        break;
                    case 'k':
                        new_text += '·ö¥';
                        break;
                    case 'l':
                        new_text += '·õö';
                        break;
                    case 'm':
                        new_text += '·õó';
                        break;
                    case 'n':
                        new_text += '·öæ';
                        break;
                    case 'o':
                        new_text += '·õü';
                        break;
                    case 'p':
                        new_text += '·õà';
                        break;
                    case 'q':
                        new_text += '·õ©';
                        break;
                    case 'r':
                        new_text += '·ö±';
                        break;
                    case 's':
                        new_text += '·õã';
                        break;
                    case 't':
                        new_text += '·õè';
                        break;
                    case 'u':
                        new_text += '·ö¢';
                        break;
                    case 'v':
                        new_text += '·ö°';
                        break;
                    case 'w':
                        new_text += '·öπ';
                        break;
                    case 'x':
                        new_text += '·õ™';
                        break;
                    case 'y':
                        new_text += '·ö§';
                        break;
                    case 'z':
                        new_text += '·õâ';
                        break;
                    case '`':
                        new_text += '\'';
                        break;
                    case undefined:
                        break;
                    default:
                        new_text += sym;
                }
        }
        const embed = new Discord.RichEmbed()
            .setTitle('üìù –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ç–æ—Ä —Ç–µ–∫—Å—Ç–∞ –≤ —Ä—É–Ω–∏—á–µ—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç')
            .setDescription(`–û—Ä–∏–≥–∏–Ω–∞–ª: \` `+ text.replace(/` /g, "\'") +` \`\n–†–µ–∑—É–ª—å—Ç–∞—Ç: \` `+ new_text.replace(/` /g, "\'") +` \`\n\n–ü–µ—Ä–µ–≤–æ–¥ –±—ã–ª –ø—Ä–æ–≤–µ–¥—ë–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É ${message.author}`);
        message.channel.send({embed});
        message.delete();
    }, '[—Ç–µ–∫—Å—Ç]', '—Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É–Ω–∏—á–µ—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç');

    add_command(['ping', '–ø–∏–Ω–≥'], true, message, command, args, 'e', null, function () {
    const color = parseInt(getRandomInt(0, 16777214));
    const embed = new Discord.RichEmbed()
        .setTitle('–ü–∏–Ω–≥?')
        .setColor(color);
    message.channel.send({embed}).then(m => {
        const embed_req = new Discord.RichEmbed()
            .setTitle('–ü–æ–Ω–≥!')
            .setDescription(`\n–û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä: ${m.createdTimestamp - message.createdTimestamp}ms.\nAPI —Å–µ—Ä–≤–µ—Ä: ${Math.round(client.ping)}ms`)
            .setColor(color);
        m.edit({embed: embed_req});
    });
    }, '', '–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä');

    if (!siteOff)
    add_command(['–ø—Ä–æ—Ñ–∏–ª—å', '–ø', 'profile', 'p', 'prof'], true, message, command, args, 'e', null, function () {
        let ment_member = message.mentions.members.first();
        let member = message.member;
        if (ment_member)
            member = ment_member;
        let text = '';
        if (member.user.id !== message.author.id)
            text = '–ü–æ –∑–∞–ø—Ä–æ—Å—É '+message.author;
        message.channel.send(text,{files: [{
                attachment: 'http://'+process.env.SITE_DOMAIN+'/profile.php?user='+member.user.id+'&nick='+encodeURIComponent(member.nickname)+'&secret='+encodeURIComponent(process.env.SECRET_KEY),
                name: 'file.png'
            }]}).then(() => {message.channel.stopTyping(true)});
        message.delete();
    }, '<–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>', '–æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å, –∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

    add_command(['–¥—É–º–æ—Ç—å', 'think', '–¥—É–º–∞—Ç—å'], true, message, command, args, 'e', null, function () {
        let question = args.join(' ');
        if (question.trim() === '') return;
        message.channel.send(`–î—É–º–æ—é –Ω–∞–¥ –≤–æ–ø—Ä–æ—Å–æ–º \` ${question.replace(/` /g, "\'")} \`, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–¥–∞–ª ${message.author}\n\n‚†Ä‚†∞‚°ø‚†ø‚†õ‚†õ‚†ª‚†ø‚£∑ \n` +
            '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£§‚£Ñ‚£Ä‚°Ä \n' +
            '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†õ‚£ø‚£ø‚£ø‚°õ‚†ø‚†∑ \n' +
            '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†ø‚†ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚†á \n' +
            '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†Å \n' +
            '\n' +
            '‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£∑‚£Ñ‚†Ä‚¢∂‚£∂‚£∑‚£∂‚£∂‚£§‚£Ä \n' +
            '‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ª‚†ó \n' +
            '‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£†‚£§‚£¥‚£∂‚°Ñ \n' +
            '‚†Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£•‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚†õ‚†É \n' +
            '‚¢∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ \n' +
            '‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Å \n' +
            '‚†à‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Å \n' +
            '‚†Ä‚†Ä‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü \n' +
            '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â');
        message.delete();
    }, '[–≤–æ–ø—Ä–æ—Å]', '—Ö–æ—Ä–æ—à–æ –æ–±–¥—É–º–æ—Ç—å –≤–æ–ø—Ä–æ—Å');

    // add_command(['–æ–±–Ω–∏–º–∞—à–∫–∏', 'hug', '–æ–±–Ω–∏–º–∏', 'hugs'], false, message, command, args, 'e', null, function() {
    //     const emoj = client.emojis.get(emojis.obnimayu);
    //     message.channel.send(`${emoj} ${message.author}`);
    // }, '', '–æ–±–Ω—è—Ç—å –±–æ—Ç–∞');

    if (!siteOff)
    add_command(['—Ü–≤–µ—Ç', 'color', 'show_color', 'sc', '–ø–æ–∫–∞–∂–∏_—Ü–≤–µ—Ç'], true, message, command, args, 'e', null, function () {
        if (!args[0]) return;
        let color = new rgbcolor(args.join(' '));
        if (!color.ok) return;
        const att = new Discord.Attachment('http://'+process.env.SITE_DOMAIN+'/color.php?red='+color.r+'&green='+color.g+'&blue='+color.b+'&secret='+encodeURIComponent(process.env.SECRET_KEY), 'color.png');
        const embed = new Discord.RichEmbed()
            .setTitle(`–¶–≤–µ—Ç: ${args.join(' ')}`)
            .attachFile(att)
            .setImage('attachment://color.png')
            .setDescription(`Hex: \`${color.toHex()}\`\nRGB: \`${color.toRGB()}\``)
            .setColor(color.toHex());
        message.reply({embed});
        message.delete();
    }, '[—Ü–≤–µ—Ç]', '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Ü–≤–µ—Ç');

    add_command(['invite', 'i', '–∏–Ω–≤–∞–π—Ç', '–ø—Ä–∏–≥–ª–æ—Å', '–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ'], false, message, command, args, 'e', null, function () {
        const embed = new Discord.RichEmbed()
            .setTitle('–°–æ–≤–µ—Ç—É–π—Ç–µ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º!')
            .setColor(parseInt(getRandomInt(0, 16777214)))
            .setDescription('–ü–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –¥—Ä—É–∑—å—è–º **—Å—Å—ã–ª–∫—É** –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä, –∏–ª–∏ **QR** –∫–æ–¥!\n' +
                '\n' +
                '*–°—Å—ã–ª–∫–∞:*\n' +
                'https://discord.io/gspace\n' +
                '\n' +
                '*QR –∫–æ–¥:*')
            .setImage('https://discord.io/gspace/qr');
        message.reply({embed});
        message.delete();
    }, '', '–ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ');

    if (!siteOff)
    add_command(['—É—Ä–æ–≤–µ–Ω—å', 'level', 'lvl', 'leval', 'l', '–ª–µ–≤–µ–ª', '–ª–µ–≤–∞–ª', '–ª–≤–ª', '–ª', 'rank', 'rang', '—Ä–∞–Ω–≥', '—Ä–∞–Ω–∫'], true, message, command, args, 'e', null, function () {
        message.delete();
        let ment_member = message.mentions.members.first();
        let member = message.member;
        if (ment_member)
            member = ment_member;
        request('http://'+process.env.SITE_DOMAIN+'/rank.php?secret='+encodeURIComponent(process.env.SECRET_KEY)+'&user='+member.user.id, function (error, response, body) {
            if (!error && response.statusCode === 200) {
                if (body.startsWith('<br')) { message.channel.stopTyping(true);message.channel.send({embed: embed_error(`–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è`)}); return message.guild.channels.get(channels.errs).send({embed: embed_error(`–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${message.author} (${message.author.tag}). –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:\n`+body.replace(/<br \/>/g, '\n').replace(/<b>/g, '**').replace(/<\/b>/g, '**'))});}
                const arr = JSON.parse(body);
                const embed = new Discord.RichEmbed()
                    .setTitle('–£—Ä–æ–≤–µ–Ω—å')
                    .addField('–†–∞–Ω–≥', arr[2], true)
                    .addField('–£—Ä–æ–≤–µ–Ω—å', arr[0], true)
                    .addField('–û–ø—ã—Ç', arr[1], true)
                    .setDescription(`${member.user} (\`${message.author.tag}\`)`)
                    .setFooter("GameüåÄSpace")
                    .setColor(parseInt(getRandomInt(0,16777214)));
                if (member.user.id === message.author.id) {
                    message.channel.send({embed});
                } else {
                    message.reply({embed});
                }
            }
        });
    }, '<–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>', '–æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –í–∞—à —É—Ä–æ–≤–µ–Ω—å, –∏–ª–∏ —É—Ä–æ–≤–µ–Ω—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

    if (!siteOff)
    add_command(['balance', 'bal', 'b', '–±–∞–ª–ª–∞–Ω—Å', '–±–∞–ª–∞–Ω—Å', '–±–∞–ª', '–±', 'money', '–¥–µ–Ω—å–≥–∏', '–±–∞–±–ª–æ', '–±–∞–±–∫–∏', 'mon', 'm'], true, message, command, args, 'e', null, function () {
        message.delete();
        let ment_member = message.mentions.members.first();
        let member = message.member;
        if (ment_member)
            member = ment_member;
        request('http://'+process.env.SITE_DOMAIN+'/balance.php?secret='+encodeURIComponent(process.env.SECRET_KEY)+'&user='+member.user.id, function (error, response, body) {
            if (!error && response.statusCode === 200) {
                if (body.startsWith('<br')) { message.channel.send({embed: embed_error(`–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞`)}); return message.guild.channels.get(channels.errs).send({embed: embed_error(`–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${message.author} (${message.author.tag}). –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:\n`+body.replace(/<br \/>/g, '\n').replace(/<b>/g, '**').replace(/<\/b>/g, '**'))});}
                const money = client.emojis.get(emojis.money);
                const embed = new Discord.RichEmbed()
                    .setTitle('–ë–∞–ª–∞–Ω—Å')
                    .setDescription(`${member.user} (\`${member.user.tag}\`)\n\n${money}${body}`)
                    .setFooter("GameüåÄSpace")
                    .setColor(parseInt(getRandomInt(0,16777214)));
                if (member.user.id === message.author.id) {
                    message.channel.send({embed});
                } else {
                    message.reply({embed});
                }
            }
        });
    }, '<–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>', '–æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –í–∞—à –±–∞–ª–∞–Ω—Å, –∏–ª–∏ –±–∞–ª–∞–Ω—Å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

    if (!siteOff)
    add_command(['—Ç–æ–ø', '—Ç–æ–ø—ã', '—Ç', '–ª–∏–¥–µ—Ä—ã', '–ª–∏–¥–µ—Ä', '–ª–∏–¥–µ—Ä–±–æ—Ä–¥', '–ª–∏–¥–µ—Ä–±–æ–∞—Ä–¥', 'top', 'leader', 'leaders', 'leaderboard', 'tops'], true, message, command, args, 'e', null, function () {
        message.delete();
        let users = [];
        request('http://'+process.env.SITE_DOMAIN+'/top.php?page='+encodeURIComponent(parseInt(args[0]).toString())+'&secret='+encodeURIComponent(process.env.SECRET_KEY)+'&user='+message.author.id, function (error, response, body) {
            if (body.startsWith('<br')) { message.channel.stopTyping(true);message.channel.send({embed: embed_error(`–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`)}); return message.guild.channels.get(channels.errs).send({embed: embed_error(`–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:\n`+body.replace(/<br \/>/g, '\n').replace(/<b>/g, '**').replace(/<\/b>/g, '**'))});}
            let data = JSON.parse(body);
            let footer = '–°—Ç—Ä–∞–Ω–∏—Ü–∞ '+data[3]+'/'+data[2];
            let usrs = data[4];
            usrs.forEach(function (item) {
                if (!message.guild.members.get(item['id'].toString())) return;
                users.push(message.guild.members.get(item['id'].toString()).toString() + ` (\`${message.guild.members.get(item['id'].toString()).user.tag}\`) - ${item['level']} —É—Ä–æ–≤–µ–Ω—å, ${item['xp']} –æ–ø—ã—Ç–∞ –≤—Å–µ–≥–æ`);
            });
            let embed = new Discord.RichEmbed()
                .setTitle('–¢–æ–ø-10')
                .setDescription(users.join('\n'))
                .setFooter(footer);
            message.channel.send({embed}).then(() => {message.channel.stopTyping(true)});
        });
    }, '', '–≤—ã–≤–µ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤');

    if (!siteOff)
    add_command(['update_roles', '–æ–±–Ω–æ–≤–∏—Ç—å_—Ä–æ–ª–∏', '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å_—Ä–æ–ª–∏', 'recover_roles', 'rr', 'ur'], true, message, command, args, 'e', null, function () {
        message.delete();
        let member = message.mentions.members.first();
        if (member) {
            if (!message.member.hasPermission('MANAGE_MESSAGES', false, true, true) && member.id !== message.author.id)
                return message.channel.send({embed: embed_error('–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ `MANAGE_MESSAGES`, –∫–æ—Ç–æ—Ä–æ–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —á—É–∂–∏—Ö –Ω–∞—Ä—É—à–µ–Ω–∏–π\n\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–∞–∫ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <@421030089732653057>')});
        } else {
            member = message.member;
        }
        request('http://'+process.env.SITE_DOMAIN+'/rank.php?secret='+encodeURIComponent(process.env.SECRET_KEY)+'&user='+member.user.id, function (error, response, body) {
            if (body.startsWith('<br')) {message.channel.stopTyping(true); message.channel.send({embed: embed_error(`–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π`)}); return message.guild.channels.get(channels.errs).send({embed: embed_error(`–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${message.author} (${message.author.tag}). –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:\n`+body.replace(/<br \/>/g, '\n').replace(/<b>/g, '**').replace(/<\/b>/g, '**'))});}
            const arr = JSON.parse(body);
            let bool = false;
            level_roles.forEach(function (item) {
                if (arr[0] >= item[0]) {
                    if (!member.roles.has(item[1])) {
                        member.addRole(item[1]).catch(console.error);
                        member.send(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å \`${message.guild.roles.get(item[1]).name}\``);
                        bool = true;
                    }
                } else {
                    if (member.roles.has(item[1])) {
                        member.removeRole(item[1]).catch(console.error);
                    }
                }
            });
            let embed;
            if (bool)
                embed = new Discord.RichEmbed()
                    .setDescription(`${member}, –≤–∞—à–∏ —Ä–æ–ª–∏ –∑–∞ —É—Ä–æ–≤–Ω–∏ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã`)
                    .setColor('3FB97C');
            else
                embed = new Discord.RichEmbed()
                    .setDescription(`${member}, —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≤—Å–µ –≤–∞—à–∏ —Ä–æ–ª–∏ –∑–∞ —É—Ä–æ–≤–Ω–∏`)
                    .setColor('C34E4E');

            message.channel.send({embed})
        });
    }, '', '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ–ª–∏ –∑–∞ —É—Ä–æ–≤–µ–Ω—å, –≤ —Å–ª—É—á–∞–µ –∏—Ö —É–¥–∞–ª–µ–Ω–∏—è');

    if (!siteOff)
    add_command(['noxp'], false, message, command, args, 'roles', [rule.game_admin], function () {
        message.delete();
        let new_args = args;
        new_args.shift();
        let reason = new_args.join(' ').trim();

        let user = message.mentions.members.first();
        if (!user) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —É–ø–æ–º—è–Ω—É–ª–∏, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)});
        if (user.user.id === message.author.id) return message.channel.send({embed: embed_error(`${user.user}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–ø—ã—Ç —É —Å–∞–º–æ–≥–æ —Å–µ–±—è`)});
        if (user.user.bot) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–ø—ã—Ç —É –±–æ—Ç–∞`)});
        let accepting = message.channel.send(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é \`${user.user.tag}\`? **–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!**\n\n**–ù–∞–ø–∏—à–∏—Ç–µ \`–¥–∞\`, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ–¥–∏—Ç—å.**`);
        const collector = new Discord.MessageCollector(message.channel, m => m.author.id === message.author.id, { time: 60000 });
        collector.on('collect', msg => {
            if (['–¥–∞', '–∞–≥–∞', '–∫–Ω—à', '–∫–æ–Ω–µ—á–Ω–æ', '–∫–æ–Ω–µ—à–Ω–æ', '–¥–∞–≤–∞–π', '–π–µ—Å', 'yes', 'y', 'aga', 'go', 'da', '–≥–æ'].includes(msg.content.toLowerCase())) {
                message.delete();
                request(`https://${process.env.SITE_DOMAIN}/noxp.php?id=${user.user.id}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${message.author.id}`, function (error, response, body) {
                    let footer = 'GameüåÄSpace';
                    let embed = new Discord.RichEmbed()
                        .setTitle('–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞')
                        .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${user.user} (\`${user.user.tag}\`)`, true)
                        .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${message.author} (\`${message.author.tag}\`)`, true)
                        .setFooter(footer)
                        .setColor('C34E4E');
                    message.channel.send(`${user.user}`, {embed}).then(() => {message.channel.stopTyping(true)});
                    message.guild.channels.get('426756919777165312').send({embed});
                });
            }
            collector.stop();
        });
    }, '[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]', '–æ—Ç–∫–ª—é—á–∏—Ç—å –æ–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');

    add_command(['—Å—Ç–∞—Ç–∏—Å—Ç–∫–∞', 'stats', '–∞–ø—Ç–∞–π–º', 'uptime'], false, message, command, args, 'creat', null, function () {
        const embed = new Discord.RichEmbed()
            .setColor(parseInt(getRandomInt(0, 16777215)))
            .setTitle('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
            .setThumbnail(client.user.avatarURL);
        embed.addField('–ü–∏–Ω–≥', client.ping, true);
        embed.addField('–û–ó–£', process.env.WEB_MEMORY + '–º–± / ' + process.env.MEMORY_AVAILABLE + '–º–±', true);
        embed.addField('–°–µ—Ä–≤–µ—Ä', process.env.DYNO, true);
        embed.addField('–ü–æ—Ä—Ç', process.env.PORT, true);
        let guilds = [];
        client.guilds.forEach(function (guild) {guilds.push(guild.name)});
        embed.addField('–ì–∏–ª—å–¥–∏–∏', '```'+guilds.join('\n')+'```');
        message.author.send(embed);
        message.delete();
    }, 'hid');


    add_command(['invites', '–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è'], false, message, command, args, 'e', null, function () {
        message.guild.fetchInvites().then(invites => {
            let invites_list = '';
            invites.filter(invite => invite.inviter.id === message.author.id).forEach((item) => {
                invites_list = invites_list + item.code + ' ‚Äì ';
                if (item.temporary) {invites_list = invites_list + '–¥–æ ' + item.expiresAt + ', '} else {invites_list = invites_list + '‚àû —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è, '}
                invites_list = invites_list + ' ' + item.uses + ' ' + declOfNum(item.uses, ['–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ', '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π']) + '\n';
            });
            const embed = new Discord.RichEmbed()
                .setTitle('–í–∞—à–∏ —Å—Å—ã–ª–∫–∏-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:')
                .setDescription(invites_list)
                .setFooter('GameüåÄSpace');
            message.author.send({embed});
            message.delete();
        });
    }, '', '—É–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ —Å—Å—ã–ª–∫–∏-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è');

    add_command(['omegalul', 'lul', 'omegalol', 'lol', '–ª–æ–ª', '–ª—É–ª', '–æ–º–µ–≥–∞–ª—É–ª', '–æ–º–µ–≥–∞–ª–æ–ª'], false, message, command, args, 'e', null, function () {
        message.channel.send(`${client.emojis.get('439014894453522432')}${client.emojis.get('439014894453522432')}${client.emojis.get('439014894453522432')}${client.emojis.get('439014894453522432')}${client.emojis.get('439014894453522432')}${client.emojis.get('439014894453522432')}`).then(msg => {
            msg.react(client.emojis.get('439014894453522432'));
            msg.react(client.emojis.get('439411257099943946'));
            msg.react(client.emojis.get('439411283402424322'));
            msg.react(client.emojis.get('439411860954021900'));
            msg.react(client.emojis.get('439411897146671105'));
            msg.react(client.emojis.get('439411919582003211'));
        })
    }, 'hid');
	
	add_command(['us'], false, message, command, args, 'creat', null, function () {
        if (message.guild.members.get === undefined) {
            return message.channel.send({embed: embed_error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è`)});
        }
        let new_args = args;
        const userse = new_args.shift();
        const UsersayMessage = new_args.join(" ");
        console.log(userse);
               message.guild.members.get(userse).send(UsersayMessage);message.delete();
    }, 'hid');

    add_command(['embedsay'], false, message, command, args, 'roles', [rule.game_admin], function () {
        try {
            let text = args.join(" ").replace(/\n/g, "\\n");
            let embed = new Discord.RichEmbed();
            let footer = text.match(/{footer:(.*?)( \| icon: ?(.*?))?}/i);
            if (footer !== null) {
                embed.setFooter(footer[1], footer[3])
            }
            let image = text.match(/{image: ?(.*?)}/i);
            if (image !== null) {
                embed.attachFile({
                    attachment: image[1],
                    file: image[1].substring(image[1].lastIndexOf('/') + 1)
                }).setImage('attachment://'+image[1].substring(image[1].lastIndexOf('/') + 1));
            }
            let thumb = text.match(/{thumbnail: ?(.*?)}/i);
            if (thumb !== null) {
                embed.attachFile({
                    attachment: thumb[1],
                    file: thumb[1].substring(thumb[1].lastIndexOf('/') + 1)
                }).setThumbnail('attachment://'+thumb[1].substring(thumb[1].lastIndexOf('/') + 1));
            }
            let author = text.match(/{author:(.*?)( \| icon: ?(.*?))?( \| url: ?(.*?))?}/i);
            if (author !== null) {
                embed.setAuthor(author[1], author[3], author[5])
            }
            let title = text.match(/{title:(.*?)}/i);
            if (title !== null) {
                embed.setTitle(title[1])
            }
            let url = text.match(/{url: ?(.*?)}/i);
            if (url !== null) {
                embed.setURL(url[1])
            }
            let description = text.match(/{description:(.*?)}/i);
            if (description !== null) {
                embed.setDescription(description[1].replace(/\\n/g, '\n'))
            }
            let color = text.match(/{colou?r: ?(.*?)}/i);
            if (color !== null) {
                embed.setColor(color[1])
            }
            let timestamp = text.match(/{timestamp(: ?(.*?))?}/i);
            if (timestamp !== null) {
                if (timestamp[2] === undefined || timestamp[2] === null)
                embed.setTimestamp(new Date());
                else
                embed.setTimestamp(new Date(timestamp[2]));
            }
            let fields = text.match(/{field: ?(.*?) \| value: ?(.*?)( \| inline)?}/gi);
            if (fields !== null) {
                fields.forEach((item) => {
                if (item[1] == null || item[2] == null || typeof item[1] === "undefined" || typeof item[2] === "undefined") return;
                let matches = item.match(/{field: ?(.*?) \| value: ?(.*?)( \| inline)?}/i);
                embed.addField(matches[1], matches[2], (matches[3] != null));
            });}
            message.channel.send({embed});
            message.delete();
        } catch(e) {
            message.channel.send({embed: embed_error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —ç–º–±—ç–¥–∞')}).then(msg => msg.delete(3000));
            console.error(e);
        }
    }, 'hid');

    add_command(['daily'], false, message, command, args, 'beta', null, function () {
        let money = client.emojis.get(emojis.money);
        let blank = client.emojis.get('435119671143038986');
        let all = [];
        message.delete(100);
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then((msg) => {
            request('http://' + process.env.SITE_DOMAIN + '/get_user_tasks.php?secret=' + encodeURIComponent(process.env.SECRET_KEY) + '&user=' + message.author.id, function (error, response, body) {
                msg.edit(message.author + ', –∑–∞–≥–ª—è–Ω–∏ –≤ –ª—Å :D').then(msg => msg.delete(3000));
                try {
                    let tasks_data = JSON.parse(body);
                    tasks_data.forEach((item, num) => {
                        if (item !== null) {
                            let done;
                            if (item['active']) item['name'] = '*__' + item['name'] + '__*';
                            if (item['active']) done = '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: **'+item['done']+'**/**'+item['count']+'**'; else done = blank;
                            all[num] = ['**' + item['name'] + '**', newLines(item['task']).join('\n'), 'üèÜ –ù–∞–≥—Ä–∞–¥–∞: **' + item['reward'] + '**' + money, done];
                        }
                        else
                            all[num] = [blank.toString(), '–ó–∞–¥–∞–Ω–∏—è –Ω–µ—Ç.\n–ü—Ä–∏—Ö–æ–¥–∏ –∑–∞–≤—Ç—Ä–∞!', blank, blank]
                    });
                    let max = 0;
                    all.forEach((item, num) => {
                        if (item.size > max) max = item.size;
                    });
                    all.forEach((item, num) => {
                        if (max > item.size) {
                            let diff = max - item.size;
                            item.concat(Array.from({length: diff}, () => '\n'))
                        }
                    });
                    message.author.send({
                        embed: (new Discord.RichEmbed()
                                .setColor('36393E')
                                .setTitle(':bell: –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è')
                                .addField('–ó–∞–¥–∞–Ω–∏–µ 1', `${all[0][0]}\n${blank}\n${all[0][1]}\n\n${blank}\n${all[0][3]}\n${all[0][2]}`, true)
                                .addField('–ó–∞–¥–∞–Ω–∏–µ 2', `${all[1][0]}\n${blank}\n${all[1][1]}\n${blank}\n${all[1][3]}\n${all[1][2]}`, true)
                                .addField('–ó–∞–¥–∞–Ω–∏–µ 3', `${all[2][0]}\n${blank}\n${all[2][1]}\n${blank}\n${all[2][3]}\n${all[2][2]}`, true)
                        )
                    });
                } catch (e) {
                    console.log(`Get ${message.author.id} tasks error: ${e}`)
                }
            });
        });
    }, 'hid');

    add_command(['hug', '–æ–±–Ω—è—Ç—å', '–æ–±–Ω–∏–º–∞—à–∫–∏', 'hugs', '—Ö—É–≥', '—Ö—É–≥—Å', '—Ö–∞–≥', '—Ö–∞–≥—Å'], false, message, command, args, 'e', null, function () {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = client.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/hug', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setTitle(':3')
                        .setDescription(`${client.emojis.get(emojis.obnimayu)} ${user} –æ–±–Ω—è–ª(–∞) ${user1} ${client.emojis.get(emojis.hugl)}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM');
                    msg.edit(`${user1}`, {embed});
                } catch (e) {console.log(e)}
            });
        });
    }, '<–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>', '–æ–±–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

    add_command(['pat', '–ø–æ–≥–ª–∞–¥–∏—Ç—å', '—É—Å–ø–æ–∫–æ–∏—Ç—å'], false, message, command, args, 'e', null, function () {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = client.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/pat', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setTitle(':3')
                        .setDescription(`${client.emojis.get(emojis.obnimayu)} ${user} –ø–æ–≥–ª–∞–¥–∏–ª(–∞) –ø–æ –≥–æ–ª–æ–≤–µ ${user1} ${client.emojis.get(emojis.hugl)}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM');
                    msg.edit(`${user1}`, {embed});
                } catch (e) {console.log(e)}
            });
        });
    }, '<–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>', '–ø–æ–≥–ª–∞–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≥–æ–ª–æ–≤–µ');

    add_command(['kiss', '–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å', '–ø–æ—Ü–µ–ª—É–π'], false, message, command, args, 'e', null, function () {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = client.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/kiss', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setTitle(':3')
                        .setDescription(`${client.emojis.get(emojis.obnimayu)} ${user} –ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞) ${user1} ${client.emojis.get(emojis.hugl)}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM');
                    msg.edit(`${user1}`, {embed});
                } catch (e) {console.log(e)}
            });
        });
    }, '<–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>', '–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

    add_command(['slap', '–ø–æ—â—ë—á–∏–Ω–∞'], false, message, command, args, 'e', null, function () {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = client.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/slap', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setTitle('>:{')
                        .setDescription(`${client.emojis.get(emojis.obnimayu)} ${user} –¥–∞–ª(–∞) –ø–æ—â—ë—á–∏–Ω—É ${user1} ${client.emojis.get(emojis.hugl)}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM');
                    msg.edit(`${user1}`, {embed});
                } catch (e) {console.log(e)}
            });
        });
    }, '<–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>', '–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ—â—ë—á–∏–Ω—É');

    add_command(['fuck', 'sex', '—Ç—Ä–∞—Ö–Ω—É—Ç—å', '—Å–µ–∫—Å', '–≤—ã–µ–±–∞—Ç—å'], false, message, command, args, 'e', null, function () {
        message.delete();
        if (!message.channel.nsfw) return message.channel.send('–¢–∞–∫–æ–µ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ <#421664477662937098>!').then(msg => msg.delete(5000));
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            return message.reply('–£–∫–∞–∂–∏—Ç–µ, —Å –∫–µ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—å—Å—è —Å–µ–∫—Å–æ–º');
        }
        let arr1 = ['anal', 'classic'];
        let url = 'https://nekos.life/api/v2/img/'+arr1[getRandomInt(0, arr1.length)];
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request(url, function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setTitle('...')
                        .setDescription(`${client.emojis.get(emojis.obnimayu)} ${user} –≤—ã–µ–±–∞–ª(–∞) ${user1} ${client.emojis.get(emojis.hugl)}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM');
                    msg.edit(`${user1}`, {embed});
                } catch (e) {console.log(e)}
            });
        });
    }, '<–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>', '–∑–∞–Ω—è—Ç—å—Å—è —Å–µ–∫—Å–æ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');

    add_command(['gasm', 'orgasm'], false, message, command, args, 'e', null, function () {
        message.delete();
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/gasm', function (error, response, body) {
                try {
                    msg.delete();
                    let arr = JSON.parse(body);
                    message.channel.send({files: [{
                        attachment: arr['url'],
                        name: arr['url'].substring(arr['url'].lastIndexOf('/')+1)
                    }]});
                } catch (e) {console.log(e)}
            });
        });
    }, '', '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –æ—Ä–≥–∞–∑–º–∞');

    /*----- END COMMANDS -----*/

    //–ö–æ–º–∞–Ω–¥–∞ help. –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –¥–æ –Ω–µ—ë.
    add_command(['help', 'h', 'he', 'hel', '–ø–æ–º–æ—â—å', '–ø–æ–º–æ—â', '–ø–æ–º–∞—â', '–ø–æ–º–∞—â—å', '–ø–∞–º–æ–≥–∏', '–ø–æ–º–∞–≥–∏', '–ø–æ–º–æ–≥–∏', '–ø–∞–º–∞–≥–∏', '—Ö–µ–ª–ø', '—Ö—ç–ª–ø'], false, message, command, args, 'e', null, function () {
        let limit = 8;
        let all_pages = Math.ceil(help_commands.length/limit);
        let current_page = parseInt(args[0]);
        if (current_page > all_pages || current_page < 1 || !isNumeric(args[0]))
            current_page = 1;
        let curr_commands = help_commands.slice(1+((current_page-1)*limit), (limit+1)+((current_page-1)*limit)).join('\n');
        let all_commands = '';
        if (!botFullRights.includes(message.channel.id))
            all_commands = '***–í–Ω–∏–º–∞–Ω–∏–µ!*** –í —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º, –∏–¥–∏—Ç–µ –≤ <#418096126957453337>\n';
        let newPage = '';
        if (current_page < all_pages)
            newPage = `\n\n**–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞–ø–∏—à–∏—Ç–µ \`${process.env.PREFIX}${command} ${current_page+1}\`**`;

        const embed = new Discord.RichEmbed()
            .setTitle(`–ü–æ–º–æ—â—å`)
            .setDescription(`–î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã, —É—á–∏—Ç—ã–≤–∞—è –ø—Ä–∞–≤–∞ ${message.member} (\`${message.author.tag}\`) –≤ —á–∞—Ç–µ ${message.channel.toString()} (\`#${message.channel.name}\`)\n`+
                `${all_commands}\n\`[...]\` ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä,\n\`<...>\` ‚Äî –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä.\n\n`+
                `${curr_commands}${newPage}`)
            .setFooter(`–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${current_page}/${all_pages}`)
            .setThumbnail('https://cdn.discordapp.com/attachments/416813030702055425/424645334556344342/Help.png');
        message.channel.send({embed});
    }, 'hid');

});

//–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Ç–æ–∫–µ–Ω–æ–º.
client.login(process.env.BOT_TOKEN).catch(console.error);
//–ó–∞—â–∏—Ç–∞ –æ—Ç –∫—Ä–∞–∂–∏ —Ç–æ–∫–µ–Ω–∞.
process.env.BOT_TOKEN = process.env.POSLANIYE;
